version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: bookrecommender-postgres
    environment:
      POSTGRES_DB: bookrecommender
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bookrecommender-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d bookrecommender"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./api/BookRecommenderApi
      dockerfile: Dockerfile
    container_name: bookrecommender-backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=bookrecommender;Username=postgres;Password=postgres
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bookrecommender-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend UI
  frontend:
    build:
      context: ./ui
      dockerfile: Dockerfile
    container_name: bookrecommender-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - bookrecommender-network

  # pgAdmin for database administration
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: bookrecommender-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - bookrecommender-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  bookrecommender-network:
    driver: bridge
