name: BookRecommender Proto - Build API

on:
  push:
    branches: [ main, master ]
    paths:
      - 'BookRecommender_proto/api/**'
      - '.github/workflows/bookrecommender-proto-api-build.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'BookRecommender_proto/api/**'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: bookrecommender-api

jobs:
  build-and-test:
    name: Build and Test .NET API
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      working-directory: ./BookRecommender_proto/api/BookRecommenderApi
      run: dotnet restore

    - name: Build application
      working-directory: ./BookRecommender_proto/api/BookRecommenderApi
      run: dotnet build --no-restore --configuration Release

    - name: Run tests
      working-directory: ./BookRecommender_proto/api/BookRecommenderApi
      run: dotnet test --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage"

    - name: Upload test coverage
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: BookRecommender_proto/api/BookRecommenderApi/TestResults/
        retention-days: 7

  build-docker-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test
    
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: ./BookRecommender_proto/api/BookRecommenderApi
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run container security scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
